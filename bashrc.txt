# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

export ROX_DOMAIN_ID=0

alias eb='gedit ~/.bashrc'
alias sb='source ~/.bashrc'

export ROS_DOMAIN_ID=30 #TURTLEBOT3

export TURTLEBOT3_MODEL=burger

# for using common ros alias
alias cw='cd ~/catkin_ws'
alias cs='cd ~/catkin_ws/src'
alias cb='cd ~/catkin_ws && catkin build'
alias ccw='cd ~/colcon_ws'
alias ccs='cd ~/colcon_ws/src'
alias ccb='cd ~/colcon_ws && colcon build'

#ros source
#source /opt/ros/noetic/setup.bash

# for using cuda and cudnn
export PATH=$PATH:/usr/local/cuda/bin:/usr/local/cuda-11.2/bin:/usr/local/cuda-11.2/bin:$PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda-11.2/lib64:/usr/local/cuda-11.2/lib64:$LD_LIBRARY_PATH

# for using anaconda3
alias anaconda3="export PATH=$PATH:/home/leejeonghun/anaconda3/bin:$PATH; echo \"Anaconda3 activated\""

# alias for using ROS1 noetic
alias noetic="export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/ros/noetic/lib:$LD_LIBRARY_PATH; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/ros/noetic/lib/arm-linux-gnueabihf:$LD_LIBRARY_PATH; export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:/home/leejeonghun/catkin_ws/src:/opt/ros/noetic/share:$ROS_PACKAGE_PATH; source /opt/ros/noetic/setup.bash; source /home/leejeonghun/catkin_ws/devel/setup.bash; echo \"ROS1 Noetic activated\" "

# primary rosmaster setup
export ROS_MASTER_URI=http://192.168.1.141:11311
export ROS_HOSTNAME=192.168.1.141 

# secondary rosmaster setup
#export ROS_MASTER_URI=http://192.168.0.100(ip_of_primary):11311
#export ROS_HOSTNAME=192.168.0.110 (ip_of_secondary)

# for using common ros2 alias
alias cba='colcon build --symlink-install'
alias cbp='colcon build --symlink-install --packages-select'
alias killg='killall -9 gzserver && killall -9 gzclient && killall -9 rosmaster'
alias rosgalactic='source /opt/ros/galactic/setup.bash'
alias rosfoxy='source /opt/ros/galactic/setup.bash && source ~/gcamp_ros2_ws/install/local_setup.bash'

alias rosrobot='source /opt/ros/galactic/setup.bash && source ~/robot_ws/install/local_setup.bash'
alias rosturtle='source /opt/ros/galactic/setup.bash && source ~/turtlebot3_ws/install/local_setup.bash'
alias rosros1='source /opt/ros/galactic/setup.bash && source ~/ros_ws/install/local_setup.bash'
alias rosros2='source /opt/ros/galactic/setup.bash && source ~/ros2_ws/install/local_setup.bash'
alias roscolcon='source /opt/ros/galactic/setup.bash && source ~/colcon_ws/install/local_setup.bash'
alias rostello='source /opt/ros/galactic/setup.bash && source ~/tello_ros_ws/install/local_setup.bash'
alias installrc='. install/setup.bash'
alias installrsc='. install/local_setup.bash'
alias rospx4='source ~/px4_ros_com_ros2/install/setup.bash'
alias roscv='source /opt/ros/galactic/setup.bash && source ~/opencv_ros2/install/local_setup.bash'
alias fastdds='export RMW_IMPLEMENTATION=rmw_fastrtps_cpp'

alias xbox="sudo xboxdrv --detach-kernel-driver --silent"

# alias for using ROS2 galactic with colcon build toolchain
alias galactic="export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:/home/leejeonghun/colcon_ws/src:/opt/ros/galactic/share:$ROS_PACKAGE_PATH; export _colcon_cd_root=/opt/ros/galactic/; source /opt/ros/galactic/setup.bash; source /usr/share/colcon_cd/function/colcon_cd.sh; source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash; source /home/leejeonghun/colcon_ws/install/setup.bash; echo \"ROS2 Galactic activated\" "

#ros2 source
#source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash
#source /usr/share/colcon_cd/function/colcon_cd.sh
#export _colcon_cd_root=~/ros2_install
#source /opt/ros/galactic/setup.bash

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/leejeonghun/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/leejeonghun/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/leejeonghun/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/leejeonghun/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
alias condaon="conda activate"
alias condaoff="conda deactivate"


#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

export PATH=$PATH:$HOME/tools/arduino-nightly
